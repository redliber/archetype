---
import '../assets/global.css'
import { ClientRouter, slide } from "astro:transitions";
import Cursor from '../components/ui/cursors/Cursor';


---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Archetype</title>
		<ClientRouter/>
		<script src="https://unpkg.com/lenis@1.1.13/dist/lenis.min.js"></script>
	</head>
	<Cursor client:load/>
	<body transition:animate="fade">
		<slot />
	</body>
</html>

<!-- <script is:inline>
if (!window.Lenis) {
    console.error('Lenis not loaded. Ensure the CDN script is included.');
  }

  function initializeLenis() {
    console.log('Initializing Lenis');
    const lenis = new window.Lenis({
      lerp: 0.5,
      duration: 2,
      smoothWheel: true,
      touchMultiplier: 2,
      autoRaf: true,
    });

    // Start Lenis animation loop
    function raf(time) {
      lenis.raf(time);
      requestAnimationFrame(raf);
    }
    requestAnimationFrame(raf);

    const handleAnchorClick = (e) => {
      console.log('Anchor clicked:', e.currentTarget.getAttribute('href'));
      e.preventDefault();
      const targetId = e.currentTarget.getAttribute('href').substring(1);
      const targetElement = document.getElementById(targetId);
      if (targetElement) {
        lenis.scrollTo(targetElement, {
          offset: -80,
          duration: 1.5,
          easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
        });
      } else {
        console.warn(`Target element with ID "${targetId}" not found`);
      }
    };

    // Use event delegation for anchor links
    const handleDocumentClick = (e) => {
      const anchor = e.target.closest('a[href^="#"]');
      if (anchor) {
        handleAnchorClick(e);
      }
    };
    document.body.addEventListener('click', handleDocumentClick);

    return { lenis, handleDocumentClick };
  }

  // Initialize Lenis on page load
  let { lenis, handleDocumentClick } = initializeLenis();

  // Reinitialize on View Transition
  document.addEventListener('astro:page-load', () => {
    console.log('astro:page-load event fired');
    if (lenis) {
      lenis.destroy();
      console.log('Previous Lenis instance destroyed');
      document.body.removeEventListener('click', handleDocumentClick);
    }
    ({ lenis, handleDocumentClick } = initializeLenis());
  });

  // Debug View Transition events
  document.addEventListener('astro:before-swap', () => {
    console.log('astro:before-swap event fired');
  });
  document.addEventListener('astro:after-swap', () => {
    console.log('astro:after-swap event fired');
  });

</script> -->

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
